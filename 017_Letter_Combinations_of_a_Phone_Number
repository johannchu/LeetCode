public class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> result = new ArrayList<String>();
        if(digits.length()==0) return result;
        else if(digits.length()==1){
            List<Character> alphabet = getAlphabet(digits.charAt(0));
            for(int i=0;i<alphabet.size();i++){
                result.add(String.valueOf(alphabet.get(i)));
            }
            return result;
        }
        else{
            String previousSub = digits.substring(0,digits.length()-1);
            List<String> preProcessed = letterCombinations(previousSub);
            List<Character> alphabet = getAlphabet(digits.charAt(digits.length()-1));
            for(int i=0;i<preProcessed.size();i++){
                for(int j=0;j<alphabet.size();j++){
                    result.add(preProcessed.get(i)+String.valueOf(alphabet.get(j)));
                }
            }
        }
        
        return result;
    }
    public List<Character> getAlphabet(char theNumber){
        List<Character> result = new ArrayList<Character>();
        switch(theNumber){
            case '2': result.add('a');result.add('b');result.add('c');break;
            case '3': result.add('d');result.add('e');result.add('f');break;
            case '4': result.add('g');result.add('h');result.add('i');break;
            case '5': result.add('j');result.add('k');result.add('l');break;
            case '6': result.add('m');result.add('n');result.add('o');break;
            case '7': result.add('p');result.add('q');result.add('r');result.add('s');break;
            case '8': result.add('t');result.add('u');result.add('v');break;
            case '9': result.add('w');result.add('x');result.add('y');result.add('z');break;
            default: break;
        }
        
        return result;
    }
}
